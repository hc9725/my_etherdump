#include <unistd.h>
#include <stdio.h>
#include <errno.h>
#include <net/if.h>
#include <sys/ioctl.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <linux/in.h>
#include <sys/socket.h>
#include <linux/if_ether.h>

int main(int argc, char **argv)
{
	int sock, n;
	char buffer[2048];
	unsigned char *iphead, *ethhead, *tcpudp;
	
	if((sock = socket(PF_PACKET, SOCK_RAW, htons(ETH_P_IP))) < 0)
	{
		perror("socket");
		exit(1);
	}
	while(1)
	{
		printf("----------------------\n");
		n = recvfrom(sock, buffer, 2048, 0, NULL, NULL);
		printf("%d bytes read\n", n);
		if(n < 42)
		{
			perror("recvfrom():");
			printf("Incomplete packet(errno is %d)\n",errno);
			close(sock);
			exit(0);
		}

		ethhead = buffer;
		printf("Source MAC address:"
			"%02x:%02x:%02x:%02x:%02x:%02x\n",
			ethhead[0],ethhead[1],ethhead[2],
			ethhead[3],ethhead[4],ethhead[5]);
		printf("Destination MAC address:"
			"%02x:%02x:%02x:%02x:%02x:%02x\n",
			ethhead[6],ethhead[7],ethhead[8],
			ethhead[9],ethhead[10],ethhead[11]);
		iphead = buffer + 14;
		//tcpudp = buffer + 	
	//	if( tcp....)
		if( *iphead == 0x45)
		{
			printf("Source host %d.%d.%d.%d",
				iphead[12],iphead[13],
				iphead[14],iphead[15]);
			printf("dest host %d.%d.%d.%d",
				iphead[16],iphead[17],
				iphead[18],iphead[19]);
			printf("source, dest ports %d,%d\n",
				(iphead[20]<<8) + iphead[21],
				(iphead[22]<<8) + iphead[23]);
			printf("Layer-4 protocol %d\n", iphead[9]);
		}

		
	}

}
